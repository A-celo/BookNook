@model BookNook.Models.LoginViewModel
@{
    Layout = "_Layout";
}

<div class="login-container">
    <div class="login-form-section">
        <h1 class="login-title">Log In</h1>

        @if (!ViewData.ModelState.IsValid)
        {
            <div class="alert alert-danger">
                <div asp-validation-summary="All" class="text-danger"></div>
            </div>
        }

        <form asp-controller="Account" asp-action="Login" method="post">
            <div class="form-group">
                <label asp-for="Correo"></label>
                <input asp-for="Correo" class="form-control" placeholder="Escribe tu email" />
                <span asp-validation-for="Correo" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Contraseña"></label>
                <input asp-for="Contraseña" class="form-control" placeholder="Escribe tu contraseña" />
                <span asp-validation-for="Contraseña" class="text-danger"></span>
            </div>

            <button type="submit" class="login-button">Log In</button>

            <div class="register-link">
                <span>¿No tienes una cuenta? </span>
                <a asp-controller="Account" asp-action="Register">Regístrate aquí</a>
            </div>
        </form>
    </div>

    <div class="login-illustration">
        <img src="~/images/open-book.png" alt="Book illustration" asp-append-version="true" />
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        $(document).ready(function () {
            $("form").validate({
                errorClass: "text-danger",
                highlight: function (element) {
                    $(element).addClass("is-invalid");
                },
                unhighlight: function (element) {
                    $(element).removeClass("is-invalid");
                }
            });
        });
    </script>
}
