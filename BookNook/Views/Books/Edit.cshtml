@model BookNook.Models.EditBookViewModel

@{
    ViewData["Title"] = "Editar libro";
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        @TempData["ErrorMessage"]
    </div>
}

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}

<h2>@ViewData["Title"]</h2>

<form asp-action="Edit" method="post" enctype="multipart/form-data">
    @Html.AntiForgeryToken()

    <input type="hidden" asp-for="LibroId" />

    <div class="form-group">
        <label asp-for="Titulo">Título</label>
        <input asp-for="Titulo" class="form-control" />
        <span asp-validation-for="Titulo" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Autor">Autor</label>
        <input asp-for="Autor" class="form-control" />
        <span asp-validation-for="Autor" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Genero">Género</label>
        <input asp-for="Genero" class="form-control" />
        <span asp-validation-for="Genero" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Subgenero">Subgénero</label>
        <input asp-for="Subgenero" class="form-control" />
        <span asp-validation-for="Subgenero" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Idioma">Idioma</label>
        <input asp-for="Idioma" class="form-control" />
        <span asp-validation-for="Idioma" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="NumeroPaginas">Número de páginas</label>
        <input asp-for="NumeroPaginas" class="form-control" type="number" min="1" max="10000" />
        <span asp-validation-for="NumeroPaginas" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="AnoPublicacion">Año de publicación</label>
        <input asp-for="AnoPublicacion" class="form-control" type="number" min="1000" max="2024" />
        <span asp-validation-for="AnoPublicacion" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="ImagenPortadaFile">Imagen de portada</label>
        <input asp-for="ImagenPortadaFile" class="form-control" type="file" accept=".jpg,.jpeg,.png,.gif" />
        <span asp-validation-for="ImagenPortadaFile" class="text-danger"></span>
        @if (!string.IsNullOrEmpty(Model.ImagenPortada))
        {
            <img src="@Model.ImagenPortada" alt="Imagen de portada" class="img-thumbnail mt-2" style="max-width: 200px;" />
        }
    </div>

    <div class="button-container">
        <button type="submit" class="btn-add">Guardar cambios</button>
        <a href="@Url.Action("Biblioteca", "Books")" class="btn-back">Volver a la Biblioteca</a>
        <button type="button" class="btn-delete" data-bs-toggle="modal" data-bs-target="#deleteModal">
            <i class="fas fa-trash"></i> Eliminar libro
        </button>
    </div>
</form>

<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirmar eliminación</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>¿Estás seguro de que deseas eliminar el libro "@Model.Titulo"?</p>
                <div class="alert alert-danger">
                    <i class="fas fa-exclamation-triangle"></i>
                    Esta acción no se puede deshacer. Se eliminarán todos los datos relacionados con este libro.
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn-back" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn-delete" onclick="deleteBook(@Model.LibroId)">Confirmar eliminación</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        function deleteBook(id) {
            const token = document.querySelector('input[name="__RequestVerificationToken"]').value;

            fetch(`/Books/DeleteConfirmed/${id}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-TOKEN': token,
                    'RequestVerificationToken': token
                },
                credentials: 'include'
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        window.location.href = '/Books/Biblioteca';
                    } else {
                        throw new Error(data.message || 'Error al eliminar el libro');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert(error.message || 'Error al eliminar el libro');
                });
        }
    </script>
}

