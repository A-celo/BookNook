@model IEnumerable<BookNook.Models.BookViewModel>

@{
    ViewData["Title"] = "Mi Biblioteca";
}

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success mt-4">
        @TempData["SuccessMessage"]
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger mt-4">
        @TempData["ErrorMessage"]
    </div>
}

<div class="container">
    <div class="reading-stats-container">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <div class="position-relative" style="flex: 1; max-width: 500px;">
                @using (Html.BeginForm("Biblioteca", "Books", FormMethod.Get))
                {
                    <input type="text" name="searchTerm" value="@Context.Request.Query["searchTerm"]" class="form-control" placeholder="Buscar" style="padding-right: 40px;" />
                    <button type="submit" class="btn position-absolute" style="right: 0; top: 0; border: none;">
                        <i class="fas fa-search"></i>
                    </button>
                }
            </div>
            <a href="@Url.Action("Add", "Books")" class="btn btn-signup">
                <i class="fas fa-plus"></i> Agregar libro
            </a>
            <a href="@Url.Action("AddLectura", "Books")" class="btn btn-signup">
                <i class="fas fa-plus"></i> Agregar lectura
            </a>
        </div>

        <div class="mb-4">
            <div class="btn-group">
                <a href="@Url.Action("Biblioteca", "Books", new { filter = "Todos", searchTerm = Context.Request.Query["searchTerm"] })" class="btn @(ViewBag.Filter == "Todos" ? "btn-signup" : "btn-outline-secondary")">Todos</a>
                <a href="@Url.Action("Biblioteca", "Books", new { filter = "PorLeer", searchTerm = Context.Request.Query["searchTerm"] })" class="btn @(ViewBag.Filter == "PorLeer" ? "btn-signup" : "btn-outline-secondary")">Por Leer</a>
                <a href="@Url.Action("Biblioteca", "Books", new { filter = "Leyendo", searchTerm = Context.Request.Query["searchTerm"] })" class="btn @(ViewBag.Filter == "Leyendo" ? "btn-signup" : "btn-outline-secondary")">Leyendo</a>
                <a href="@Url.Action("Biblioteca", "Books", new { filter = "Leidos", searchTerm = Context.Request.Query["searchTerm"] })" class="btn @(ViewBag.Filter == "Leidos" ? "btn-signup" : "btn-outline-secondary")">Leídos</a>
                <a href="@Url.Action("Biblioteca", "Books", new { filter = "DNF", searchTerm = Context.Request.Query["searchTerm"] })" class="btn @(ViewBag.Filter == "DNF" ? "btn-signup" : "btn-outline-secondary")">DNF</a>
            </div>
        </div>

        <div class="books-grid">
            @foreach (var item in Model)
            {
                <div class="book-card">
                    <img src="@item.ImagenPortada" alt="@item.Titulo" class="book-cover" />

                    <a href="@Url.Action("Edit", "Books", new { id = item.Id })" class="edit-book-icon">
                        <i class="fas fa-pencil-alt"></i>
                    </a>

                    <div class="book-info">
                        <div>
                            <h5 class="mb-1">@item.Titulo</h5>
                            <p class="text-muted mb-2">@item.Autor</p>

                            @if (item.FechaFin.HasValue)
                            {
                                <p class="text-muted mb-1">
                                    <strong>Fechas:</strong> @item.FechaInicio?.ToString("dd/MMM/yy") - @item.FechaFin?.ToString("dd/MMM/yy")
                                </p>
                            }
                            else if (item.FechaInicio.HasValue)
                            {
                                <p class="text-muted mb-1">
                                    <strong>Inicio:</strong> @item.FechaInicio?.ToString("dd/MMM/yy")
                                </p>
                            }

                            @if (item.Calificacion.HasValue && item.FechaFin.HasValue)
                            {
                                <div class="calificacion mb-1">
                                    <strong>Calificación:</strong>
                                    @for (int i = 1; i <= 5; i++)
                                    {
                                        <i class="fas fa-star @(i <= item.Calificacion ? "text-warning" : "text-muted")"></i>
                                    }
                                </div>
                            }

                            @if (item.Progreso.HasValue)
                            {
                                <p class="text-muted">
                                    <strong>Lectura:</strong> @item.Progreso.Value.ToString("0")%
                                </p>
                            }
                            else
                            {
                                <p class="text-muted">
                                    <strong>Lectura:</strong> No iniciado
                                </p>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/js/all.min.js"></script>
}





