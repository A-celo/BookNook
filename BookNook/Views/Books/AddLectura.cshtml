@model BookNook.Models.LecturaViewModel

@{
    ViewData["Title"] = "Agregar Lectura";
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        @TempData["ErrorMessage"]
    </div>
}

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}

<form asp-controller="Books" asp-action="AddLectura" method="post" id="lecturaForm">
    @Html.AntiForgeryToken()

    <div class="form-group">
        <label asp-for="LibroId"></label>
        <select asp-for="LibroId" class="form-control" asp-items="Model.Libros">
            <option value="">Seleccione un libro</option>
        </select>
        <span asp-validation-for="LibroId" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="EstadoId"></label>
        <select asp-for="EstadoId" class="form-control">
            <option value="">Seleccione un estado</option>
            <option value="1">Leído</option>
            <option value="2">Por Leer</option>
            <option value="3">Leyendo</option>
            <option value="4">DNF</option>
        </select>
        <span asp-validation-for="EstadoId" class="text-danger"></span>
    </div>

    <div id="dynamic-fields"></div>

    <div class="button-container mt-3">
        <button type="submit" class="btn-add">Agregar Lectura</button>
        <a href="@Url.Action("Biblioteca", "Books")" class="btn-back">Volver a la Biblioteca</a>
    </div>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        $(document).ready(function () {
            function validateDates() {
                var fechaInicio = $('#FechaInicio').val();
                var fechaFin = $('#FechaFin').val();

                if (fechaInicio && fechaFin && new Date(fechaFin) < new Date(fechaInicio)) {
                    $('#FechaFin').addClass('input-validation-error');
                    $('#fechaFinError').text('La fecha de fin debe ser posterior a la fecha de inicio');
                    return false;
                }
                return true;
            }

            $('#EstadoId').change(function () {
                var estado = $(this).val();
                $('#dynamic-fields').empty();

                var today = new Date().toISOString().split('T')[0];

                if (estado == "1") { // leído
                    $('#dynamic-fields').append(`
                                <div class="form-group">
                                    <label for="FechaInicio">Fecha de inicio</label>
                                    <input type="date" id="FechaInicio" name="FechaInicio"
                                           class="form-control" max="${today}" required />
                                    <span class="text-danger" id="fechaInicioError"></span>
                                </div>
                                <div class="form-group">
                                    <label for="FechaFin">Fecha de fin</label>
                                    <input type="date" id="FechaFin" name="FechaFin"
                                           class="form-control" max="${today}" required />
                                    <span class="text-danger" id="fechaFinError"></span>
                                </div>
                                <div class="form-group">
                                    <label for="Calificacion">Calificación</label>
                                    <input type="number" id="Calificacion" name="Calificacion"
                                           class="form-control" min="0" max="10" step="0.5" required />
                                    <span class="text-danger" id="calificacionError"></span>
                                </div>
                                <div class="form-group">
                                    <label for="Notas">Notas</label>
                                    <textarea id="Notas" name="Notas" class="form-control"
                                            maxlength="1000"></textarea>
                                    <small class="text-muted">Máximo 1000 caracteres</small>
                                    <span class="text-danger" id="notasError"></span>
                                </div>
                            `);
                } else if (estado == "3") { // leyendo
                    $('#dynamic-fields').append(`
                                <div class="form-group">
                                    <label for="FechaInicio">Fecha de inicio</label>
                                    <input type="date" id="FechaInicio" name="FechaInicio"
                                           class="form-control" max="${today}" required />
                                    <span class="text-danger" id="fechaInicioError"></span>
                                </div>
                                <div class="form-group">
                                    <label for="PaginaActual">Página actual</label>
                                    <input type="number" id="PaginaActual" name="PaginaActual"
                                           class="form-control" min="1" required />
                                    <span class="text-danger" id="paginaActualError"></span>
                                </div>
                            `);
                }

                $('form').removeData('validator');
                $('form').removeData('unobtrusiveValidation');
                $.validator.unobtrusive.parse('form');
            });

            $('#lecturaForm').submit(function (e) {
                if ($(this).valid() && validateDates()) {
                    return true;
                }
                e.preventDefault();
                return false;
            });
        });
    </script>
}
